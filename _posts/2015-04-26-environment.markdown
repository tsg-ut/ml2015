---
layout: post
title:  "#02 環境構築"
date:   2015-04-26 21:07
categories: ml
---

## 統計解析とプログラミング

統計処理とプログラミングは切っても切り離せない関係にある。
プログラミングと言っても、この分野ではGUIで華やかなアプリケーションを作る技術やアセンブリをバリバリ読むということは勿論無く、単純に計算したい数式を記述するツールとして用いられることがほとんどだ。
そのため、プログラミング初心者の人も臆する必要はない（むしろプログラミングの観点から見れば難易度は低いので、プログラミングの勉強としても良いはずだ）。

統計解析によく用いられるプログラミング言語・ツールには以下のようなものがある（levelfourのバイアスがかかっている）。

+ Excel: 言わずもがな。<s>方眼紙として使わなければ最強なんだけどなあ</s>
+ MatLab: 数値計算の王道ソフトウェア。ライセンスも高いので研究室向け。
+ R: GNU発のフリーの数値解析ソフトウェア。フリーなのに高機能。
+ Python: 汎用プログラミング言語だが、数値計算ライブラリが充実。
+ (Julia: 2012年に初公開された、LLVMベースの高速数値計算向け汎用プログラミング言語)

この分科会ではPythonを用いることにする。統計解析だけに絞るのであれば確かにR言語の方が（特に検定回りで）ライブラリが充実しているのだが、Pythonの方が汎用プログラミング言語ともあって、他のツールの助力を借りること無くファイルアクセスしたりWeb公開できるのが強みだ。
世界的に見てもこの流れがあるようで、最近はR言語を始めるならPythonをやろうとよく言われる。

## Pythonの統計解析用環境

一般的に以下のようなライブラリ群が用いられる。

+ numpy: 行列計算
+ scipy: 科学計算（フィッティング、連立方程式、特殊関数、微分積分など）
+ matplotlib: グラフプロットツール
+ pandas: データの読み書き、表の作成（Pythonで動くExcelのような感じ）
+ scikit-learn: 機械学習
+ IPython(Jupyter): 高機能インタラクティブPythonシェル

この回では、Python自体の処理系のインストールと、上記ライブラリのインストールを目指す。

## pyenvのインストール

`pyenv`を入れておくとよい。仮想環境を使うと

+ 任意のバージョンのPythonを簡単に入れられる
+ システムのPythonを破壊せずにとっておける
+ Sandbox環境を簡単に作成&破棄できる
+ 後述のAnacondaもあっという間にインストール
+ Ma OS Xだと`brew install pyenv`で入れられるっぽい

といった風にメリットづくしなので、オススメする。ちなみに同じバージョンのPythonを複数入れたいという需要があるかもしれないが、そんなときには`virtualenv`を用いる。

以下OSごとのインストール方法を説明する。levelfourはMac OS 10.9, 10.10, Ubuntu 14.04でのインストールを確認した。
また、2014年度の分科会で他のメンバーによりWindowsでのインストールも確認された。

#### Windows

Cygwinで以下のページの通りに作業するとインストールできることを確認。

[pyenvとvirtualenvのインストールと使い方 - Qiita](http://qiita.com/la_luna_azul/items/3f64016feaad1722805c)

ただし、Windowsだと**pyenvからanacondaをうまくインストールできない**ようなので、後述のAnaconda Installerを使用するとよい。

#### Mac OS X

```
$ brew install pyenv
```

#### Linux

[pyenv-installer](https://github.com/yyuu/pyenv-installer)を用いるとインストールできる。
（Ubuntu 14.04で確認）

### pyenvの使い方（概略）

#### インストール可能バージョンを見る

```
$ pyenv install -l
```

#### インストールする

```
$ pyenv install [what-you-want]
```

#### インストール済バージョン一覧を参照

```
$ pyenv versions
```

#### 環境の切り替え

```
$ pyenv global [environment]
```

ちなみに`global`でシステム全体で使用するPythonのバージョン、`local`で**そのディレクトリより下層**で使用するPythonのバージョンを設定することが出来る。

【参考】[pyenvとvirtualenvのインストールと使い方 - Qiita](http://qiita.com/la_luna_azul/items/3f64016feaad1722805c)

## Anacondaのインストール

## Pythonの基礎知識

